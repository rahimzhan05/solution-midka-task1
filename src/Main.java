import factories.CardFactory;
import factories.CryptoFactory;
import models.Status;
import models.Transaction;
import services.PaymentService;

import java.util.Scanner;

// Main Method for Interactive Console
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        PaymentService service = new PaymentService();
        double balance = 100.00;

        while (true) {
            System.out.println("\n\uD83D\uDCBC –¢”©–ª–µ–º –∂“Ø–π–µ—Å—ñ | –ë–∞–ª–∞–Ω—Å: $" + balance);
            System.out.println("1Ô∏è‚É£ –¢”©–ª–µ–º –∂–∞—Å–∞—É");
            System.out.println("2Ô∏è‚É£ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ç–∞—Ä–∏—Ö—ã–Ω –∫”©—Ä—É");
            System.out.println("3Ô∏è‚É£ –®—ã“ì—É");
            System.out.print("üëâ –¢–∞“£–¥–∞—É—ã“£—ã–∑–¥—ã –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    balance = processUserPayment(scanner, service, balance);
                    break;
                case 2:
                    service.showHistory();
                    break;
                case 3:
                    System.out.println("üö™ –ë–∞“ì–¥–∞—Ä–ª–∞–º–∞ –∂–∞–±—ã–ª–¥—ã.");
                    scanner.close();
                    return;
                default:
                    System.out.println("‚ùå “ö–∞—Ç–µ! “ö–∞–π—Ç–∞–¥–∞–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑.");
            }
        }
    }

    private static double processUserPayment(Scanner scanner, PaymentService service, double balance) {
        System.out.println("\nüí≥ –¢”©–ª–µ–º ”ô–¥—ñ—Å—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:");
        System.out.println("1Ô∏è‚É£ –ö—Ä–µ–¥–∏—Ç –∫–∞—Ä—Ç–∞—Å—ã");
        System.out.println("2Ô∏è‚É£ PayPal");
        System.out.println("3Ô∏è‚É£ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞");
        System.out.print("üëâ –¢–∞“£–¥–∞—É: ");

        int paymentChoice = scanner.nextInt();
        System.out.print("üí∞ –¢”©–ª–µ–º —Å–æ–º–∞—Å—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ");
        double amount = scanner.nextDouble();

        Transaction transaction = null;

        switch (paymentChoice) {
            case 1:
                transaction = service.processPayment(new CardFactory(), amount, balance);
                break;
            case 2:
                System.out.print("üìß PayPal Email –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑: ");
                String email = scanner.next();
                transaction = service.processPayPalPayment(email, amount, balance);
                break;
            case 3:
                transaction = service.processPayment(new CryptoFactory(), amount, balance);
                break;
            default:
                System.out.println("‚ùå “ö–∞—Ç–µ! “ö–∞–π—Ç–∞–¥–∞–Ω —Ç–∞“£–¥–∞“£—ã–∑.");
                return balance;
        }

        System.out.println("‚úÖ –¢”©–ª–µ–º –Ω”ô—Ç–∏–∂–µ—Å—ñ: " + transaction);
        return transaction.status == Status.SUCCESS ? balance - amount : balance;
    }
}